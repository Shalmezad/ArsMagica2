package am2.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelCalefactor extends ModelBase{
	//fields
	ModelRenderer Bottom;
	ModelRenderer Rim1;
	ModelRenderer Rim15;
	ModelRenderer Rim16;
	ModelRenderer Rim4;
	ModelRenderer Rim5;
	ModelRenderer Rim9;
	ModelRenderer Base;
	ModelRenderer Rim13;
	ModelRenderer Rim10;
	ModelRenderer Rim6;
	ModelRenderer Rim2;
	ModelRenderer Rim3;
	ModelRenderer Rim7;
	ModelRenderer Rim11;
	ModelRenderer Rim14;
	ModelRenderer Rim12;
	ModelRenderer Rim8;
	ModelRenderer Pole4;
	ModelRenderer Pole1;
	ModelRenderer Pole2;
	ModelRenderer Pole3;
	ModelRenderer Pillar1;
	ModelRenderer Pillar2;
	ModelRenderer Pillar3;
	ModelRenderer Pillar4;
	ModelRenderer InnerPillar;
	ModelRenderer Crystal;

	public ModelCalefactor(){
		textureWidth = 64;
		textureHeight = 32;

		Bottom = new ModelRenderer(this, 0, 0);
		Bottom.addBox(-5F, 0F, -5F, 10, 1, 10);
		Bottom.setRotationPoint(0F, 23F, 0F);
		Bottom.setTextureSize(64, 32);
		Bottom.mirror = true;
		setRotation(Bottom, 0F, 0F, 0F);
		Rim1 = new ModelRenderer(this, 0, 0);
		Rim1.addBox(-8F, 0F, 0F, 16, 1, 1);
		Rim1.setRotationPoint(0F, 11F, -8F);
		Rim1.setTextureSize(64, 32);
		Rim1.mirror = true;
		setRotation(Rim1, 0F, 0F, 0F);
		Rim15 = new ModelRenderer(this, 0, 0);
		Rim15.addBox(-5F, 0F, 0F, 10, 1, 1);
		Rim15.setRotationPoint(0F, 14F, -5F);
		Rim15.setTextureSize(64, 32);
		Rim15.mirror = true;
		setRotation(Rim15, 0F, 0F, 0F);
		Rim16 = new ModelRenderer(this, 0, 0);
		Rim16.addBox(0F, 0F, -4F, 1, 1, 8);
		Rim16.setRotationPoint(4F, 14F, 0F);
		Rim16.setTextureSize(64, 32);
		Rim16.mirror = true;
		setRotation(Rim16, 0F, 0F, 0F);
		Rim4 = new ModelRenderer(this, 0, 0);
		Rim4.addBox(0F, 0F, -7F, 1, 1, 14);
		Rim4.setRotationPoint(7F, 11F, 0F);
		Rim4.setTextureSize(64, 32);
		Rim4.mirror = true;
		setRotation(Rim4, 0F, 0F, 0F);
		Rim5 = new ModelRenderer(this, 0, 0);
		Rim5.addBox(-7F, 0F, 0F, 14, 1, 1);
		Rim5.setRotationPoint(0F, 12F, -7F);
		Rim5.setTextureSize(64, 32);
		Rim5.mirror = true;
		setRotation(Rim5, 0F, 0F, 0F);
		Rim9 = new ModelRenderer(this, 0, 0);
		Rim9.addBox(-6F, 0F, 0F, 12, 1, 1);
		Rim9.setRotationPoint(0F, 13F, -6F);
		Rim9.setTextureSize(64, 32);
		Rim9.mirror = true;
		setRotation(Rim9, 0F, 0F, 0F);
		Base = new ModelRenderer(this, 24, 20);
		Base.addBox(-5F, 0F, -5F, 10, 2, 10);
		Base.setRotationPoint(0F, 15F, 0F);
		Base.setTextureSize(64, 32);
		Base.mirror = true;
		setRotation(Base, 0F, 0F, 0F);
		Rim13 = new ModelRenderer(this, 0, 0);
		Rim13.addBox(-5F, 0F, 0F, 10, 1, 1);
		Rim13.setRotationPoint(0F, 14F, 4F);
		Rim13.setTextureSize(64, 32);
		Rim13.mirror = true;
		setRotation(Rim13, 0F, 0F, 0F);
		Rim10 = new ModelRenderer(this, 0, 0);
		Rim10.addBox(-6F, 0F, 0F, 12, 1, 1);
		Rim10.setRotationPoint(0F, 13F, 5F);
		Rim10.setTextureSize(64, 32);
		Rim10.mirror = true;
		setRotation(Rim10, 0F, 0F, 0F);
		Rim6 = new ModelRenderer(this, 0, 0);
		Rim6.addBox(-7F, 0F, 0F, 14, 1, 1);
		Rim6.setRotationPoint(0F, 12F, 6F);
		Rim6.setTextureSize(64, 32);
		Rim6.mirror = true;
		setRotation(Rim6, 0F, 0F, 0F);
		Rim2 = new ModelRenderer(this, 0, 0);
		Rim2.addBox(-8F, 0F, 0F, 16, 1, 1);
		Rim2.setRotationPoint(0F, 11F, 7F);
		Rim2.setTextureSize(64, 32);
		Rim2.mirror = true;
		setRotation(Rim2, 0F, 0F, 0F);
		Rim3 = new ModelRenderer(this, 0, 0);
		Rim3.addBox(0F, 0F, -7F, 1, 1, 14);
		Rim3.setRotationPoint(-8F, 11F, 0F);
		Rim3.setTextureSize(64, 32);
		Rim3.mirror = true;
		setRotation(Rim3, 0F, 0F, 0F);
		Rim7 = new ModelRenderer(this, 0, 0);
		Rim7.addBox(0F, 0F, -6F, 1, 1, 12);
		Rim7.setRotationPoint(6F, 12F, 0F);
		Rim7.setTextureSize(64, 32);
		Rim7.mirror = true;
		setRotation(Rim7, 0F, 0F, 0F);
		Rim11 = new ModelRenderer(this, 0, 0);
		Rim11.addBox(0F, 0F, -5F, 1, 1, 10);
		Rim11.setRotationPoint(5F, 13F, 0F);
		Rim11.setTextureSize(64, 32);
		Rim11.mirror = true;
		setRotation(Rim11, 0F, 0F, 0F);
		Rim14 = new ModelRenderer(this, 0, 0);
		Rim14.addBox(0F, 0F, -4F, 1, 1, 8);
		Rim14.setRotationPoint(-5F, 14F, 0F);
		Rim14.setTextureSize(64, 32);
		Rim14.mirror = true;
		setRotation(Rim14, 0F, 0F, 0F);
		Rim12 = new ModelRenderer(this, 0, 0);
		Rim12.addBox(0F, 0F, -5F, 1, 1, 10);
		Rim12.setRotationPoint(-6F, 13F, 0F);
		Rim12.setTextureSize(64, 32);
		Rim12.mirror = true;
		setRotation(Rim12, 0F, 0F, 0F);
		Rim8 = new ModelRenderer(this, 0, 0);
		Rim8.addBox(0F, 0F, -6F, 1, 1, 12);
		Rim8.setRotationPoint(-7F, 12F, 0F);
		Rim8.setTextureSize(64, 32);
		Rim8.mirror = true;
		setRotation(Rim8, 0F, 0F, 0F);
		Pole4 = new ModelRenderer(this, 0, 26);
		Pole4.addBox(0F, 0F, 0F, 1, 5, 1);
		Pole4.setRotationPoint(-8F, 6F, -8F);
		Pole4.setTextureSize(64, 32);
		Pole4.mirror = true;
		setRotation(Pole4, 0F, 0F, 0F);
		Pole1 = new ModelRenderer(this, 0, 26);
		Pole1.addBox(0F, 0F, 0F, 1, 5, 1);
		Pole1.setRotationPoint(7F, 6F, -8F);
		Pole1.setTextureSize(64, 32);
		Pole1.mirror = true;
		setRotation(Pole1, 0F, 0F, 0F);
		Pole2 = new ModelRenderer(this, 0, 26);
		Pole2.addBox(0F, 0F, 0F, 1, 5, 1);
		Pole2.setRotationPoint(7F, 6F, 7F);
		Pole2.setTextureSize(64, 32);
		Pole2.mirror = true;
		setRotation(Pole2, 0F, 0F, 0F);
		Pole3 = new ModelRenderer(this, 0, 26);
		Pole3.addBox(0F, 0F, 0F, 1, 5, 1);
		Pole3.setRotationPoint(-8F, 6F, 7F);
		Pole3.setTextureSize(64, 32);
		Pole3.mirror = true;
		setRotation(Pole3, 0F, 0F, 0F);
		Pillar1 = new ModelRenderer(this, 0, 0);
		Pillar1.addBox(0F, 0F, 0F, 1, 6, 1);
		Pillar1.setRotationPoint(-4F, 17F, -4F);
		Pillar1.setTextureSize(64, 32);
		Pillar1.mirror = true;
		setRotation(Pillar1, 0F, 0F, 0F);
		Pillar2 = new ModelRenderer(this, 0, 0);
		Pillar2.addBox(0F, 0F, 0F, 1, 6, 1);
		Pillar2.setRotationPoint(-4F, 17F, 3F);
		Pillar2.setTextureSize(64, 32);
		Pillar2.mirror = true;
		setRotation(Pillar2, 0F, 0F, 0F);
		Pillar3 = new ModelRenderer(this, 0, 0);
		Pillar3.addBox(0F, 0F, 0F, 1, 6, 1);
		Pillar3.setRotationPoint(3F, 17F, 3F);
		Pillar3.setTextureSize(64, 32);
		Pillar3.mirror = true;
		setRotation(Pillar3, 0F, 0F, 0F);
		Pillar4 = new ModelRenderer(this, 0, 0);
		Pillar4.addBox(0F, 0F, 0F, 1, 6, 1);
		Pillar4.setRotationPoint(3F, 17F, -4F);
		Pillar4.setTextureSize(64, 32);
		Pillar4.mirror = true;
		setRotation(Pillar4, 0F, 0F, 0F);
		InnerPillar = new ModelRenderer(this, 48, 0);
		InnerPillar.addBox(-2F, -1F, -2F, 4, 2, 4);
		InnerPillar.setRotationPoint(0F, 14F, 0F);
		InnerPillar.setTextureSize(64, 32);
		InnerPillar.mirror = true;
		setRotation(InnerPillar, 0F, 0F, 0F);
		Crystal = new ModelRenderer(this, 52, 6);
		Crystal.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3);
		Crystal.setRotationPoint(0F, 20F, 0F);
		Crystal.setTextureSize(64, 32);
		Crystal.mirror = true;
		setRotation(Crystal, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5){
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		Bottom.render(f5);
		Rim1.render(f5);
		Rim15.render(f5);
		Rim16.render(f5);
		Rim4.render(f5);
		Rim5.render(f5);
		Rim9.render(f5);
		Base.render(f5);
		Rim13.render(f5);
		Rim10.render(f5);
		Rim6.render(f5);
		Rim2.render(f5);
		Rim3.render(f5);
		Rim7.render(f5);
		Rim11.render(f5);
		Rim14.render(f5);
		Rim12.render(f5);
		Rim8.render(f5);
		Pole4.render(f5);
		Pole1.render(f5);
		Pole2.render(f5);
		Pole3.render(f5);
		Pillar1.render(f5);
		Pillar2.render(f5);
		Pillar3.render(f5);
		Pillar4.render(f5);
		InnerPillar.render(f5);
		Crystal.render(f5);
	}

	public void renderModel(float x, float y, float z, float f5){
		Crystal.rotateAngleX = x;
		Crystal.rotateAngleY = y;
		Crystal.rotateAngleZ = z;

		Bottom.render(f5);
		Rim1.render(f5);
		Rim15.render(f5);
		Rim16.render(f5);
		Rim4.render(f5);
		Rim5.render(f5);
		Rim9.render(f5);
		Base.render(f5);
		Rim13.render(f5);
		Rim10.render(f5);
		Rim6.render(f5);
		Rim2.render(f5);
		Rim3.render(f5);
		Rim7.render(f5);
		Rim11.render(f5);
		Rim14.render(f5);
		Rim12.render(f5);
		Rim8.render(f5);
		Pole4.render(f5);
		Pole1.render(f5);
		Pole2.render(f5);
		Pole3.render(f5);
		Pillar1.render(f5);
		Pillar2.render(f5);
		Pillar3.render(f5);
		Pillar4.render(f5);
		InnerPillar.render(f5);
		Crystal.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z){
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}
}
